<launch>
 
  <!-- Enable visualization in rviz, joint_state_publisher and robot_state_publisher, and robot_description -->
  <!-- Enable feedback from dynamic simulator for the robot state publisher -->
  <rosparam param="source_list">[/pisa_hand/joint_states]</rosparam>
  <remap from="/joint_states" to="/pisa_hand/joint_states"/>

  <!-- and publish a value for the synergy joint/invisible wire link to avoid the error in the RobotDiplay Rviz -->
  <include file="$(find pisa_hand_description)/launch/display.launch">
    <arg name="gui" value="false" />
    <arg name="robot_name" value="pisa_hand_adaptive"/>
    <arg name="use_rviz" value="true"/>
    <arg name="use_joint_state_publisher" value="false"/> 
    <!-- if you choose true, it automatically loads the pure kinematic control plugin
         otherwise the default adaptive transmission plugin is loaded -->
    <arg name="use_mimic_tag" value="false"/> 
  </include>

  <!-- Spawn a robot into Gazebo -->
  <node name="spawn_urdf" pkg="gazebo_ros" type="spawn_model" args="-param robot_description -urdf -model pisa_hand" respawn="false" output="screen"/>

  <!-- We resume the logic in empty_world.launch, changing only the name of the world to be launched -->
  <include file="$(find gazebo_ros)/launch/empty_world.launch">
    <arg name="world_name" value="$(find pisa_hand_description)/worlds/simple_environment.world"/>
    <arg name="paused" value="false"/>
    <arg name="use_sim_time" value="true"/>
    <arg name="gui" value="true"/>
    <arg name="headless" value="true"/>
    <arg name="debug" value="false"/>
  </include>

  <include file="$(find pisa_hand_ros_control)/launch/pisa_hand_adaptive.launch"/>

</launch>